--- a/net/minecraft/client/renderer/item/ItemStackRenderState.java
+++ b/net/minecraft/client/renderer/item/ItemStackRenderState.java
@@ -72,7 +_,7 @@
             return null;
         } else {
             BakedModel bakedmodel = this.layers[p_387539_.nextInt(this.activeLayerCount)].model;
-            return bakedmodel == null ? null : bakedmodel.getParticleIcon();
+            return bakedmodel == null ? null : bakedmodel.getParticleIcon(net.neoforged.neoforge.client.model.data.ModelData.EMPTY);
         }
     }
 
@@ -116,6 +_,14 @@
         }
 
         public void setupBlockModel(BakedModel p_386829_, RenderType p_387529_) {
+            // Neo: Guard against models using chunk render types.
+            if (p_387529_.getChunkLayerId() != -1) {
+                throw new IllegalArgumentException("""
+                        Attempting to render an item BakedModel with an invalid RenderType: %s.
+                        Chunk render types are not supported, and the equivalent render types from the Sheets class should be used.
+                        Model: %s.
+                        """.formatted(p_387529_, p_386829_));
+            }
             this.model = p_386829_;
             this.renderType = p_387529_;
         }
@@ -149,6 +_,9 @@
 
         void render(PoseStack p_387607_, MultiBufferSource p_386763_, int p_387589_, int p_388775_) {
             p_387607_.pushPose();
+            if (model != null)
+                model.applyTransform(displayContext, p_387607_, ItemStackRenderState.this.isLeftHand);
+            else
             this.transform().apply(ItemStackRenderState.this.isLeftHand, p_387607_);
             p_387607_.translate(-0.5F, -0.5F, -0.5F);
             if (this.specialRenderer != null) {
